name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: 'lts/*'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [production, staging]
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        TEST_ENV: ${{ matrix.environment }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-${{ matrix.environment }}-${{ matrix.browser }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-local:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    services:
      fashionhub:
        image: pocketaces2/fashionhub-demo-app:latest
        ports:
          - 4000:4000
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Wait for FashionHub app to be ready
      run: |
        echo "Waiting for FashionHub app to start..."
        timeout 60 bash -c 'until curl -f http://localhost:4000/fashionhub/; do 
          echo "Waiting for app..."
          sleep 3
        done'
        echo "FashionHub app is ready!"
        
    - name: Verify app is accessible
      run: |
        curl -I http://localhost:4000/fashionhub/
        curl -I http://localhost:4000/fashionhub/login.html
        
    - name: Run Playwright tests against local Docker container
      run: npx playwright test
      env:
        TEST_ENV: local
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-local
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-individual-cases:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case: [1, 2, 3, 4]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run Test Case ${{ matrix.test-case }}
      run: npm run test:case${{ matrix.test-case }}
      env:
        TEST_ENV: production
        
    - name: Upload CSV results (Test Case 4)
      if: matrix.test-case == 4
      uses: actions/upload-artifact@v4
      with:
        name: github-pr-analysis
        path: test-outputs/appwrite-pull-requests-*.csv
        retention-days: 30
